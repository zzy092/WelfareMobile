{"remainingRequest":"D:\\code\\Welfare_New_System\\welfare_mobile\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\Welfare_New_System\\welfare_mobile\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\code\\Welfare_New_System\\welfare_mobile\\src\\common\\CBC.js","dependencies":[{"path":"D:\\code\\Welfare_New_System\\welfare_mobile\\src\\common\\CBC.js","mtime":1617356866668},{"path":"D:\\code\\Welfare_New_System\\welfare_mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\Welfare_New_System\\welfare_mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\code\\Welfare_New_System\\welfare_mobile\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgQ3J5cHRvSlMgZnJvbSAiY3J5cHRvLWpzIjsKZXhwb3J0IGRlZmF1bHQgewogIC8vIOWKoOWvhgogIGVuY3J5cHQ6IGZ1bmN0aW9uIGVuY3J5cHQod29yZCwga2V5U3RyLCBpdlN0cikgewogICAga2V5U3RyID0ga2V5U3RyID8ga2V5U3RyIDogIk9ldXRtbmdoYWhkZmxnZmUiOwogICAgaXZTdHIgPSBpdlN0ciA/IGl2U3RyIDogIk9ldXRtbmdoYWhkZmxnZmUiOwogICAgdmFyIGtleSA9IENyeXB0b0pTLmVuYy5VdGY4LnBhcnNlKGtleVN0cik7CiAgICB2YXIgaXYgPSBDcnlwdG9KUy5lbmMuVXRmOC5wYXJzZShpdlN0cik7CiAgICB2YXIgc3JjcyA9IENyeXB0b0pTLmVuYy5VdGY4LnBhcnNlKHdvcmQpOwogICAgdmFyIGVuY3J5cHRlZCA9IENyeXB0b0pTLkFFUy5lbmNyeXB0KHNyY3MsIGtleSwgewogICAgICBpdjogaXYsCiAgICAgIG1vZGU6IENyeXB0b0pTLm1vZGUuQ0JDLAogICAgICBwYWRkaW5nOiBDcnlwdG9KUy5wYWQuWmVyb1BhZGRpbmcKICAgIH0pOwogICAgcmV0dXJuIGVuY3J5cHRlZC50b1N0cmluZygpOwogIH0sCiAgLy8g6Kej5a+GCiAgZGVjcnlwdDogZnVuY3Rpb24gZGVjcnlwdCh3b3JkLCBrZXlTdHIsIGl2U3RyKSB7CiAgICBrZXlTdHIgPSBrZXlTdHIgPyBrZXlTdHIgOiAiT2V1dG1uZ2hhaGRmbGdmZSI7CiAgICBpdlN0ciA9IGl2U3RyID8gaXZTdHIgOiAiT2V1dG1uZ2hhaGRmbGdmZSI7CiAgICB2YXIga2V5ID0gQ3J5cHRvSlMuZW5jLlV0ZjgucGFyc2Uoa2V5U3RyKTsKICAgIHZhciBpdiA9IENyeXB0b0pTLmVuYy5VdGY4LnBhcnNlKGl2U3RyKTsKICAgIHZhciBkZWNyeXB0ID0gQ3J5cHRvSlMuQUVTLmRlY3J5cHQod29yZCwga2V5LCB7CiAgICAgIGl2OiBpdiwKICAgICAgbW9kZTogQ3J5cHRvSlMubW9kZS5DQkMsCiAgICAgIHBhZGRpbmc6IENyeXB0b0pTLnBhZC5aZXJvUGFkZGluZwogICAgfSk7CiAgICByZXR1cm4gZGVjcnlwdC50b1N0cmluZyhDcnlwdG9KUy5lbmMuVXRmOCk7CiAgfQp9Ow=="},{"version":3,"sources":["D:/code/Welfare_New_System/welfare_mobile/src/common/CBC.js"],"names":["CryptoJS","encrypt","word","keyStr","ivStr","key","enc","Utf8","parse","iv","srcs","encrypted","AES","mode","CBC","padding","pad","ZeroPadding","toString","decrypt"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,WAArB;AAEA,eAAe;AACb;AACAC,EAAAA,OAFa,mBAELC,IAFK,EAECC,MAFD,EAESC,KAFT,EAEgB;AAC3BD,IAAAA,MAAM,GAAGA,MAAM,GAAGA,MAAH,GAAY,kBAA3B;AACAC,IAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAW,kBAAxB;AACA,QAAIC,GAAG,GAAGL,QAAQ,CAACM,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBL,MAAxB,CAAV;AACA,QAAIM,EAAE,GAAGT,QAAQ,CAACM,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBJ,KAAxB,CAAT;AACA,QAAIM,IAAI,GAAGV,QAAQ,CAACM,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBN,IAAxB,CAAX;AAEA,QAAIS,SAAS,GAAGX,QAAQ,CAACY,GAAT,CAAaX,OAAb,CAAqBS,IAArB,EAA2BL,GAA3B,EAAgC;AAC9CI,MAAAA,EAAE,EAAFA,EAD8C;AAE9CI,MAAAA,IAAI,EAAEb,QAAQ,CAACa,IAAT,CAAcC,GAF0B;AAG9CC,MAAAA,OAAO,EAAEf,QAAQ,CAACgB,GAAT,CAAaC;AAHwB,KAAhC,CAAhB;AAKA,WAAON,SAAS,CAACO,QAAV,EAAP;AACD,GAfY;AAgBb;AACAC,EAAAA,OAjBa,mBAiBLjB,IAjBK,EAiBCC,MAjBD,EAiBSC,KAjBT,EAiBgB;AAC3BD,IAAAA,MAAM,GAAGA,MAAM,GAAGA,MAAH,GAAY,kBAA3B;AACAC,IAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAW,kBAAxB;AACA,QAAIC,GAAG,GAAGL,QAAQ,CAACM,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBL,MAAxB,CAAV;AACA,QAAIM,EAAE,GAAGT,QAAQ,CAACM,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBJ,KAAxB,CAAT;AAEA,QAAIe,OAAO,GAAGnB,QAAQ,CAACY,GAAT,CAAaO,OAAb,CAAqBjB,IAArB,EAA2BG,GAA3B,EAAgC;AAC5CI,MAAAA,EAAE,EAAFA,EAD4C;AAE5CI,MAAAA,IAAI,EAAEb,QAAQ,CAACa,IAAT,CAAcC,GAFwB;AAG5CC,MAAAA,OAAO,EAAEf,QAAQ,CAACgB,GAAT,CAAaC;AAHsB,KAAhC,CAAd;AAKA,WAAOE,OAAO,CAACD,QAAR,CAAiBlB,QAAQ,CAACM,GAAT,CAAaC,IAA9B,CAAP;AACD;AA7BY,CAAf","sourcesContent":["import CryptoJS from \"crypto-js\";\n\nexport default {\n  // 加密\n  encrypt(word, keyStr, ivStr) {\n    keyStr = keyStr ? keyStr : \"Oeutmnghahdflgfe\";\n    ivStr = ivStr ? ivStr : \"Oeutmnghahdflgfe\";\n    let key = CryptoJS.enc.Utf8.parse(keyStr);\n    let iv = CryptoJS.enc.Utf8.parse(ivStr);\n    let srcs = CryptoJS.enc.Utf8.parse(word);\n\n    let encrypted = CryptoJS.AES.encrypt(srcs, key, {\n      iv,\n      mode: CryptoJS.mode.CBC,\n      padding: CryptoJS.pad.ZeroPadding\n    });\n    return encrypted.toString();\n  },\n  // 解密\n  decrypt(word, keyStr, ivStr) {\n    keyStr = keyStr ? keyStr : \"Oeutmnghahdflgfe\";\n    ivStr = ivStr ? ivStr : \"Oeutmnghahdflgfe\";\n    var key = CryptoJS.enc.Utf8.parse(keyStr);\n    let iv = CryptoJS.enc.Utf8.parse(ivStr);\n\n    var decrypt = CryptoJS.AES.decrypt(word, key, {\n      iv,\n      mode: CryptoJS.mode.CBC,\n      padding: CryptoJS.pad.ZeroPadding\n    });\n    return decrypt.toString(CryptoJS.enc.Utf8);\n  }\n};\n"]}]}